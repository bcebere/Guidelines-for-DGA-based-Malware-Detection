# third party
import pandas as pd
import numpy as np
from nltk import ngrams

# dga_analysis absolute
from dga_analysis.datasets.dataset_mixed import DatasetMixed

# tls_fingerprinting absolute
from dga_analysis.detection.ji import JIClassifier as plugin
from dga_analysis.utils.evaluation import evaluate_classifier


def test_ji_plugin_sanity() -> None:
    test_plugin = plugin()
    assert test_plugin is not None


def test_ji_plugin_fit_predict_dga() -> None:
    test_plugin = plugin()
    dataset = DatasetMixed(
        sample_size=5000,
        sources={"tranco": 0.5, "dgarchive": 0.5},
        multiclass=False,
    )
    X, y = dataset.raw_np()

    scores = evaluate_classifier(test_plugin, X, y)
    print(scores["str"])


def test_ji_plugin_fit_predict_dga_hard() -> None:
    test_plugin = plugin()
    dataset = DatasetMixed(sample_size=10000, dga_families=["matsnu_dga"])
    X, y = dataset.raw_np()

    scores = evaluate_classifier(test_plugin, X, y)
    print(scores["str"])



