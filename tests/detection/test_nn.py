# third party
import pytest
from sklearn.datasets import load_iris

# dga_analysis absolute
from dga_analysis.datasets.dataset_mixed import DatasetMixed

# tls_fingerprinting absolute
from dga_analysis.detection.nn import NeuralNetClassifier as plugin
from dga_analysis.utils.evaluation import evaluate_classifier


def test_nn_plugin_sanity() -> None:
    test_plugin = plugin()
    assert test_plugin is not None


def test_nn_plugin_fit_predict_proba() -> None:
    test_plugin = plugin()
    X, y = load_iris(return_X_y=True, as_frame=True)
    scores = evaluate_classifier(test_plugin, X, y)
    print(scores["str"])


@pytest.mark.parametrize("multiclass", [False, True])
def test_nn_plugin_fit_predict_dga(multiclass: bool) -> None:
    test_plugin = plugin()
    dataset = DatasetMixed(sample_size=10000, multiclass=multiclass)
    X, y = dataset.as_statistical()

    scores = evaluate_classifier(test_plugin, X, y)
    print(scores["str"])
