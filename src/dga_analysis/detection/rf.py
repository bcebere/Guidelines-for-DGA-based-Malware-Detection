# stdlib
from typing import Any

# third party
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier

# dga_analysis relative
from .base import BaseDetector


class RFClassifier(BaseDetector):
    def __init__(
        self,
        max_depth: int = 4,
        random_state: int = 0,
    ) -> None:
        self.model = RandomForestClassifier(
            max_depth=max_depth, random_state=random_state
        )

    def fit(self, X: np.ndarray, y: np.ndarray) -> "RFClassifier":
        self.model.fit(X, y)
        return self

    def predict(self, X: np.ndarray, *args: Any, **kwargs: Any) -> pd.DataFrame:
        return self.model.predict(X)

    def predict_proba(self, X: np.ndarray, *args: Any, **kwargs: Any) -> pd.DataFrame:
        return self.model.predict_proba(X)

    @staticmethod
    def name() -> str:
        return "random_forest"
