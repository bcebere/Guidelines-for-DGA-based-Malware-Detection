# stdlib
from abc import ABCMeta, abstractmethod

# third party
import numpy as np


class BaseGenerator(metaclass=ABCMeta):
    """Base class for the generator models."""

    def __init__(self) -> None:
        super().__init__()

    @abstractmethod
    def fit(self, X: np.ndarray) -> "BaseGenerator":
        """
        Train a model using features X
        """
        ...

    @abstractmethod
    def generate(self, n_samples: int) -> np.ndarray:
        """
        Generate n_samples synthetic examples.
        """
        ...

    @staticmethod
    @abstractmethod
    def name() -> str:
        ...
